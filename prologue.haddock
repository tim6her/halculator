= halculator
== A simple RPN calculator written in Haskell

<<https://travis-ci.org/tim6her/halculator.svg?branch=master>>

Ever wanted to find the expected number of heads when 
tossing 5 coins, i.e. computing

<<http://latex.univie.ac.at/?%5Cmathbb%20E%5Cleft%5B%5Cmathrm%7BBinom%7D%5Cleft%285,%20%5Cfrac%7B1%7D%7B2%7D%5Cright%29%5Cright%5D%20%3D%20%5Csum_%7Bi%3D0%7D%5E5%20%i%207B5%20%5Cchoose%20i%7D%20%5Cleft%28%5Cfrac%7B1%7D%7B2%7D%5Cright%29%5E5,>>

using an <https://en.wikipedia.org/wiki/Reverse_Polish_notation RPN> calculator? Now you can!

<<screen2.gif>>

=== But wait there's more

Currently the following functions are implemented:

= Operators
  * @+@ (addition)
  * @-@ (subtraction)
  * @*@ (multiplication)
  * @/@ (division)
  * @^@ (power)
  
= Misc
  * @sum@ (sum of all elements in stack)
  * @prod@ (product of all elements in stack)
  * @!@ (factorial)
  * @nCr@ (n choose r)
  * @abs@ (absolute value)
  * @..@ (range between two values)
  
= Constants
  * @pi@ (ratio of a circle's circumfence and its diameter)
  * @e@ (Euler's number)
  
= Functions with Exponents
  * @exp@ (exponential function with respect to @e@)
  * @log@ (logarithm with respect to Euler constant @e@)
  * @ln@ (alias for @log@)
  * @sqrt@ (squareroot)
  * @logBase@ (Logarithm of @x@ with respect to base @y@)
  
= Trigonomitry and Hyperbolics
  * @sin@
  * @cos@
  * @tan@
  * @asin@
  * @acos@
  * @atan@
  * @sinh@
  * @cosh@
  * @tanh@
  * @asinh@
  * @acosh@
  * @atanh@
  
= Control
  * @swp@ (swap the first to elements in stack)
  * @cpy@ (copy first element)
  * @rot@ (rotate stack one element to the left)
  * @rotl@ (alias for @rot@)
  * @rotr@ (rotate stack one element to the right)
  * @clr@ (clear stack)